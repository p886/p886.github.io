<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Philipp Antar</title>
    <link>https://philippantar.com/posts/</link>
    <description>Recent content in Posts on Philipp Antar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 23 Nov 2015 12:25:34 +0100</lastBuildDate>
    
	<atom:link href="https://philippantar.com/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How I deploy to GitHub Pages</title>
      <link>https://philippantar.com/posts/how-i-deploy-to-github-pages/</link>
      <pubDate>Mon, 23 Nov 2015 12:25:34 +0100</pubDate>
      
      <guid>https://philippantar.com/posts/how-i-deploy-to-github-pages/</guid>
      <description>How does Github pages work? (skip if you know this) Many static pages generators will generate a single public as output. This folders contains the entire generated site. On GitHub you can create a repository with the special name &amp;lt;your GitHub username&amp;gt;.github.io, in my case p886.github.io. Doing so will create a webpage at the address http://github_user_name.github.io.
The problem with static page generators and GitHub pages The tricky part is that the master branch of that repository should contain the site (the content of the aforementioned public folder), while on the other hand you probably want to keep the source files of that page (in my case of collection of markdown files) in the same repository.</description>
    </item>
    
  </channel>
</rss>